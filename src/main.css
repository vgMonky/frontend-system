*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  font-weight: normal;
}

:root {
  /* THIS WILL BE OVERWRITTEN  BY colorVariable.js when App.vue onMounted()*/
  --color0: #0f0f0f; 
  --color1: #404040; 
  --color2: #819234; 
  --color3: #C0C0C0; 
  --color4: #f9f9f9;

  /* Radius Variable */
  --r0: 15px;
  --r1: 30px;
}
/* SET COLOR THEMES BASED ON COLOR VARIABLES */
[data-theme="light"] {
  --c0: var(--color0); 
  --c1: var(--color1); 
  --c2: var(--color2); 
  --c3: var(--color3); 
  --c4: var(--color4); 
}
[data-theme="dark"] {
  --c0: var(--color4); 
  --c1: var(--color3); 
  --c2: var(--color2); 
  --c3: var(--color1); 
  --c4: var(--color0);
}
/* invert color theme with the .invert class, nested up to 5 times */
[data-theme="light"] .invert,
[data-theme="light"] .invert .invert .invert,
[data-theme="light"] .invert .invert .invert .invert .invert {
  --c0: var(--color4); 
  --c1: var(--color3); 
  --c2: var(--color2); 
  --c3: var(--color1); 
  --c4: var(--color0);
}
[data-theme="dark"] .invert ,
[data-theme="dark"] .invert .invert .invert,
[data-theme="dark"] .invert .invert .invert .invert .invert {
  --c0: var(--color0);
  --c1: var(--color1);
  --c2: var(--color2);
  --c3: var(--color3);
  --c4: var(--color4);
}
[data-theme="light"] .invert .invert,
[data-theme="light"] .invert .invert .invert .invert,
[data-theme="light"] .invert .invert .invert .invert .invert .invert {
  --c0: var(--color0);
  --c1: var(--color1);
  --c2: var(--color2);
  --c3: var(--color3);
  --c4: var(--color4);
}
[data-theme="dark"] .invert .invert,
[data-theme="dark"] .invert .invert .invert .invert,
[data-theme="dark"] .invert .invert .invert .invert .invert .invert {
  --c0: var(--color4); 
  --c1: var(--color3); 
  --c2: var(--color2); 
  --c3: var(--color1); 
  --c4: var(--color0);
}






body {
  min-height: 100vh;
  font-family: sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--c4);
  color: var(--c0);
}


h1 {
  font-size: 38pt;
  font-weight: 600;
}

h2 {
  font-size: 28pt;
  font-weight: 600;
}

h3 {
  font-size: 18pt;
  font-weight: 600;
}

p {
  font-size: 14pt;
}


button{
  background-color: var(--c4);
  color: var(--c0);
  border: 1px solid var(--c3);
  
  border-radius: var(--r1);
  padding: 12px 16px;
  transition: 0.2s ease-in;
}
button:hover{
  background-color: var(--c2);
  color: var(--c4);
  border: 1px solid var(--c2);
}


/* instead of creating for example card components(whitch is some content with a container arround), just create all components uncontained with transparent background, and add the class=contained if it needs to be contained. This applays to whatever element> */
.contained{
  display: block;
  background-color: var(--c4);
  color: var(--c0);
  border: 1px solid var(--c3);
  border-radius: var(--r0);
  padding: 20px 20px;
}